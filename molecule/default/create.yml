---
- name: Create
  hosts: localhost
  connection: local
  gather_facts: false
  no_log: "{{ not lookup('env', 'MOLECULE_DEBUG') | bool }}"
  vars:
    molecule_file: "{{ lookup('env', 'MOLECULE_FILE') }}"
    molecule_ephemeral_directory: "{{ lookup('env', 'MOLECULE_EPHEMERAL_DIRECTORY') }}"
    molecule_scenario_directory: "{{ lookup('env', 'MOLECULE_SCENARIO_DIRECTORY') }}"
    molecule_yml: "{{ lookup('file', molecule_file) | molecule_from_yaml }}"
    docker_config: "{{ lookup('file', 'docker_hashes.yml') | from_yaml }}"
  tasks:
    # If you add this into the molecule file, molecule adds it as a target for
    # ansible / testinfra which is not something we want
    - name: Start up elasticsearch
      docker_container:
        name: curator_role_elasticsearch
        image: "quay.io/freedomofpress/elasticsearch-with-paxflags@{{ docker_config['elasticsearch'] }}"
        state: started
        exposed_ports:
          - 9200
        published_ports:
          - 9200
        env:
          xpack.monitoring.enabled: "false"
          xpack.security.enabled: "false"
          # allow connecting from head UI for debugging
          http.host: 0.0.0.0
          discovery.type: single-node
          http.cors.allow-origin: "http://localhost:9100"
          http.cors.enabled: "true"
          http.cors.allow-credentials: "true"
          http.cors.allow-headers: "X-Requested-With,X-Auth-Token,Content-Type,Content-Length,Authorization"

    - name: Create molecule instance(s)
      docker_container:
        name: "{{ item.name }}"
        hostname: "{{ item.name }}"
        image: "{{ item.image }}@{{ docker_config[item.image] }}"
        state: started
        recreate: false
        log_driver: json-file
        command: "{{ item.command | default('bash -c \"while true; do sleep 10000; done\"') }}"
        privileged: "{{ item.privileged | default(omit) }}"
        volumes: "{{ item.volumes | default(omit) }}"
        capabilities: "{{ item.capabilities | default(omit) }}"
        ports: "{{ item.exposed_ports | default(omit) }}"
        ulimits: "{{ item.ulimits | default(omit) }}"
      register: server
      with_items: "{{ molecule_yml.platforms }}"
      async: 7200
      poll: 0

    - name: Wait for instance(s) creation to complete
      async_status:
        jid: "{{ item.ansible_job_id }}"
      register: docker_jobs
      until: docker_jobs.finished
      retries: 300
      with_items: "{{ server.results }}"
